@using Dexpa.WebSite.Helpers
@using Dexpa.WebSite.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Кортеж-Авто</title>
    <script type="text/javascript">var ApiServerUrl = "@GlobalConfiguration.GetApiServerUrl()"</script>
    <link href="~/Content/Styles/lightbox.css" rel="stylesheet" />

    @Styles.Render("~/Content/Styles/css")
</head>
<body ng-app="DexpaApp">

    <div id="alert">

    </div>

    <div class="container-fluid">
        @Html.Partial("_MainMenu")
        @RenderBody()
    </div>

    @if (GlobalConfiguration.roleAccessModel != null && GlobalConfiguration.roleAccessModel.HasAccess)
    {
        @Html.Partial("_PhoneWidget")
    }
    
    @if (GlobalConfiguration.roleAccessModel != null && GlobalConfiguration.roleAccessModel.CanSeeAndSendNews)
    {
        @Html.Partial("_NewsWidget")
    }

    <div class="modal fade" id="infoModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel"></h4>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    @Scripts.Render("~/bundles/scripts")

    @{
        DateTime tokenDate = new DateTime();
        string tokenString = "";
        if (User != null)
        {
            var userName = @User.Identity.Name;
            var token = UserTokenHelper.GetToken(userName);
            if (token != null)
                tokenDate = token.ExpirationDate;
            if (token != null)
                tokenString = token.Token;
        }
    }

    <script>
        userToken = "@tokenString";
    tokenExpirationTime = new Date(@tokenDate.Year, @tokenDate.Month - 1, @tokenDate.Day, @tokenDate.Hour, @tokenDate.Minute, @tokenDate.Second, @tokenDate.Millisecond);
        var curDate = new Date();
        curDate = new Date(curDate.getUTCFullYear(), curDate.getUTCMonth(), curDate.getUTCDate(), curDate.getUTCHours(), curDate.getUTCMinutes());

        var refreshTime = @UserTokenHelper.TokenRefreshTimeMinutes * 60 * 1000;
        if (userToken == "" || tokenExpirationTime.valueOf() - curDate.valueOf() < refreshTime) {
            var logOutForm = $('#logoutForm');
            if (logOutForm !== null) {
                $(document).stop();
                logOutForm.submit();
            }
        }
    </script>
    <script src="~/Scripts/AngularControllers/IPPhoneController.js"></script>
    
    <script src="~/Scripts/AngularDirectives/DateTimeDirectives.js"></script>
    <script src="~/Scripts/AngularDirectives/TableDataFormatDirectives.js"></script>
    @RenderSection("scripts", required: false)

</body>
</html>